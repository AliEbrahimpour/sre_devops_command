version: '3'
services:
  blog-db:
    # We use a mariadb image which supports both amd64 & arm64 architecture
    image: mariadb:10.6.4-focal
    # If you really want to use MySQL, uncomment the following line
    #image: mysql:8.0.27
    command: '--default-authentication-plugin=mysql_native_password'
    volumes:
    - blog_data/blog_db:/var/lib/mysql:z
    environment:
    - MYSQL_ROOT_PASSWORD=N4HweM2UyPiUuafL62a7
    - MYSQL_DATABASE=wp_db
    - MYSQL_USER=blog
    - MYSQL_PASSWORD=3Dn3QeBsb7pmzgGMc4Wx
    networks:
    - application
    deploy:
      placement:
        constraints:
        - node.role == worker
  blog-wp:
    image: wordpress:latest
    volumes:
    - blog_data/blog_wp:/var/www/html:z
    # ports:
    #   - 80:80
    environment:
    - WORDPRESS_DB_HOST=blog-db
    - WORDPRESS_DB_USER=blog
    - WORDPRESS_DB_PASSWORD=3Dn3QeBsb7pmzgGMc4Wx
    - WORDPRESS_DB_NAME=wp_db
    # - WORDPRESS_TABLE_PREFIX=wp_
    deploy:
      placement:
        constraints:
        - node.role == worker
      labels:
      - "traefik.enable=true"
      - "traefik.http.routers.blog-wp.entrypoints=web,websecure"
      - "traefik.http.routers.blog-wp.rule=Host(`vajab.ir`)" # && Path(`/blog`)"
      - "traefik.http.services.blog-wp.loadbalancer.server.port=80"
      - "traefik.http.routers.blog-wp.service=blog-wp"
      - "traefik.docker.network=application"
      - "traefik.http.routers.blog-wp.tls.certresolver=letsencrypt"
    networks:
    - application
networks:
  application:
    external: true
volumes:
  blog_data:
    driver: convoy
